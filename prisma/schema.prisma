generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model academy {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String   @db.VarChar(255)
  description String?  @db.VarChar(255)
  image       String?  @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model coach_player {
  id                                String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  coach_id                          String   @db.Uuid
  player_id                         String   @db.Uuid
  created_at                        DateTime @default(now()) @db.Timestamp(6)
  updated_at                        DateTime @default(now()) @db.Timestamp(6)
  user_coach_player_coach_idTouser  user     @relation("coach_player_coach_idTouser", fields: [coach_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_coach_player_player_idTouser user     @relation("coach_player_player_idTouser", fields: [player_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model parent_child {
  id                                String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  parent_id                         String   @db.Uuid
  child_id                          String   @db.Uuid
  created_at                        DateTime @default(now()) @db.Timestamp(6)
  updated_at                        DateTime @default(now()) @db.Timestamp(6)
  user_parent_child_child_idTouser  user     @relation("parent_child_child_idTouser", fields: [child_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_parent_child_parent_idTouser user     @relation("parent_child_parent_idTouser", fields: [parent_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model player_profile {
  id                                  String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  player_id                           String   @db.Uuid
  coach_id                            String   @db.Uuid
  notes                               String?
  observations                        String?
  created_at                          DateTime @default(now()) @db.Timestamp(6)
  updated_at                          DateTime @default(now()) @db.Timestamp(6)
  user_player_profile_coach_idTouser  user     @relation("player_profile_coach_idTouser", fields: [coach_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_player_profile_player_idTouser user     @relation("player_profile_player_idTouser", fields: [player_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id                                            String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email                                         String           @unique @db.VarChar(255)
  firstName                                     String?          @db.VarChar(255)
  lastName                                      String?          @db.VarChar(255)
  roq_user_id                                   String           @db.VarChar(255)
  tenant_id                                     String           @db.VarChar(255)
  created_at                                    DateTime         @default(now()) @db.Timestamp(6)
  updated_at                                    DateTime         @default(now()) @db.Timestamp(6)
  academy                                       academy[]
  coach_player_coach_player_coach_idTouser      coach_player[]   @relation("coach_player_coach_idTouser")
  coach_player_coach_player_player_idTouser     coach_player[]   @relation("coach_player_player_idTouser")
  parent_child_parent_child_child_idTouser      parent_child[]   @relation("parent_child_child_idTouser")
  parent_child_parent_child_parent_idTouser     parent_child[]   @relation("parent_child_parent_idTouser")
  player_profile_player_profile_coach_idTouser  player_profile[] @relation("player_profile_coach_idTouser")
  player_profile_player_profile_player_idTouser player_profile[] @relation("player_profile_player_idTouser")
}
